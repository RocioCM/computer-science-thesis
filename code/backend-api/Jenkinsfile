pipeline {
    agent any
    environment {
        DOCKER_TAG = "blockchain-thesis-api"
        PORT = "8080"
        EXTERNAL_PORT = "8199"
        DB_HOST = "${env.DOMAIN}"
        DB_PORT = "3306"
        DB_USER = credentials("DB_USER")
        DB_PASS = credentials("DB_PASS")
        FIREBASE_CONFIG = credentials("BLOCKCHAIN_FIREBASE_ADMIN_CONFIG")
        PRIVATE_KEY = credentials("BLOCKCHAIN_THESIS_PRIVATE_KEY")
        PROVIDER_URL = credentials("BLOCKCHAIN_THESIS_PROVIDER_URL")
        BASE_BATCH_CONTRACT_ADDRESS = "${env.BASE_BATCH_CONTRACT_ADDRESS}"
        PRODUCT_BATCH_CONTRACT_ADDRESS = "${env.PRODUCT_BATCH_CONTRACT_ADDRESS}"
        RECYCLING_CONTRACT_ADDRESS = "${env.RECYCLING_CONTRACT_ADDRESS}"
        PROJECT_DIR = "code/backend-api"
    }
    stages {
        stage("Build") {
            steps {
                echo "Building.."
                sh "cd ${PROJECT_DIR} && docker build -t $DOCKER_TAG ."
            }
        }
        stage("Deploy") {
            steps {
                echo "Stopping previous version..."
                sh "docker stop $DOCKER_TAG || echo Nothing to stop"
                sh "docker rm $DOCKER_TAG || echo Nothing to delete"
                echo "Deploying...."
                sh "cd ${PROJECT_DIR} && docker run -d -e PORT -e DB_HOST -e DB_PORT -e DB_USER -e DB_PASS -e FIREBASE_CONFIG -e PRIVATE_KEY -e PROVIDER_URL -e BASE_BATCH_CONTRACT_ADDRESS -e PRODUCT_BATCH_CONTRACT_ADDRESS -e RECYCLING_CONTRACT_ADDRESS -p $EXTERNAL_PORT:$PORT --name $DOCKER_TAG $DOCKER_TAG"
            }
        }
    }
}
